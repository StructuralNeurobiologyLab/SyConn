stages:
  - build
  - test
  - cleanup

include:
  - template: Code-Quality.gitlab-ci.yml

code_quality:
  image: gitlab-registry.mpcdf.mpg.de/mpcdf/module-image
  variables:
    CODE_QUALITY_IMAGE: "registry.example.com/codequality-fork:12-5-stable"
  artifacts:
    paths: [gl-code-quality-report.json]
  tags:
    - docker


test:
  stage: test
  script:
    - source ~/.bashrc
    - conda activate pysyintegration
    - pip install --upgrade --no-deps -v -e .
    - pytest --ignore=tests/test_run.py
  except:
    - master
  tags:
    - default

test-full:
  stage: test
  script:
    - source ~/.bashrc
    - conda activate pysyintegration_m
    - pip install --upgrade --no-deps -v -e .
    - pytest
  only:
    - master
  tags:
    - master

build:
  stage: build
  # TODO: use conda environment for test stage
  script:
    - conda env create -f environment.yml -n pysyintegration_m python --force
    - source ~/.bashrc
    - conda activate pysyintegration_m
  only:
    - master
  tags:
    - master

cleanup:
  stage: cleanup
  script:
    - conda remove --yes -n pysyintegration_m --all
  when: always
  only:
    - master
  tags:
    - master
    
pylint:
  stage: test
  before_script:
    - pip install pylint pylint-exit anybadge
  script:
    - mkdir ./pylint
    - pylint --output-format=text . | tee ./pylint/pylint.log || pylint-exit $?
    - PYLINT_SCORE=$(sed -n 's/^Your code has been rated at \([-0-9.]*\)\/.*/\1/p' ./pylint/pylint.log)
    - anybadge --label=Pylint --file=pylint/pylint.svg --value=$PYLINT_SCORE 2=red 4=orange 8=yellow 10=green
    - echo "Pylint score is $PYLINT_SCORE"
  artifacts:
    paths:
      - ./pylint/