# General properties of the data set
scaling: [1, 1, 1]

# File system, 'FS' is currently the only supported option
backend: "FS"

# OpenGL platform: 'egl' (GPU support) or 'osmesa' (CPU rendering)
pyopengl_platform: 'egl'

existing_cell_organelles: ['mi', 'sj', 'vc']
syntype_avail:

# Compute backend: 'QSUB', 'SLURM', None
batch_proc_system: 'SLURM'  # If None, fall-back is single node multiprocessing

# the here defined parameters
batch_pe: 'default'
batch_queue: 'all.q'

# TODO: Use computing settings everywhere
mem_per_node: 249500  # in MB
ncores_per_node: 20
ngpus_per_node: 2
nnodes_total: 17

# --------- LOGGING
# 'None' disables logging of SyConn modules (e.g. proc, handler, ...) to files.
# Logs of executed scripts (syconn/scripts) will be stored at the
# working directory + '/logs/' nonetheless.
default_log_dir:
log_level: 10  # INFO: 20, DEBUG: 10
# file logging for individual modules, and per job. Only use in case of
# debugging with single core processing. Logs for scripts are located in 'SyConn/scripts/'
# will be stored at wd + '/logs/'.
disable_file_logging: True

# File locking - True is untested yet.
disable_locking: False

# Data paths
paths:
  kd_seg:
  kd_sym:
  kd_asym:
  kd_sj:
  kd_vc:
  kd_mi:
  init_rag:
  use_new_subfold:

# (Super-)SegmentationDataset versions
versions:
  sv: 0
  vc: 0
  sj: 0
  syn: 0
  syn_ssv: 0
  mi: 0
  ssv: 0
  ax_gt: 0
  cs: 0

# Cell object properties
cell_objects:
  lower_mapping_ratios:
    mi: 0.5
    sj: 0.1
    vc: 0.5

  upper_mapping_ratios:
    mi: 1.
    sj: 0.9
    vc: 1.

  sizethresholds:
    mi: 2786
    sj: 498
    vc: 1584

  probathresholds:
    mi: 0.428571429
    sj: 0.19047619
    vc: 0.285714286

  # bounding box criteria for mapping mitochondria objects
  thresh_mi_bbd_mapping: 25000  # bounding box diagonal in NM

  # --------- CONTACT SITE AND SYNAPSE PARAMETERS
  # Synaptic junction bounding box diagonal threshold in nm; objects above will
  # not be used during `syn_gen_via_cset`
  thresh_sj_bbd_syngen: 25000  # bounding box diagonal in NM
  # used for agglomerating 'syn' objects (cell supervoxel-based synapse fragments)
  # into 'syn_ssv'
  cs_gap_nm: 250
  cs_filtersize: [13, 13, 7]
  cs_nclosings: 13
  # Parameters of agglomerated synapses 'syn_ssv'
  # mapping parameters in 'map_objects_to_synssv'; assignment of cellular
  # organelles to syn_ssv
  max_vx_dist_nm: 2000
  max_rep_coord_dist_nm: 4000
  thresh_synssv_proba: 0.5  # RFC probability used for classifying whether syn or not
  thresh_synssv_size: 10  # minimum number of voxel for synapses in SSVs, TODO: tweak, increase
  # above will be assigned synaptic sign (-1, inhibitory) and <= will be
  # (1, excitatory)
  sym_thresh: 0.225

meshes:
  allow_mesh_gen_cells:
  use_new_meshing:

  downsampling:
    sv: [4, 4, 2]
    sj: [2, 2, 1]
    vc: [4, 4, 2]
    mi: [8, 8, 4]
    cs: [2, 2, 1]
    syn_ssv: [2, 2, 1]

  closings:
    sv: 0
    s: 0
    vc: 0
    mi: 0
    cs: 0
    syn_ssv: 0

  mesh_min_obj_vx: 100  # adapt to size threshold

  meshing_props:
    normals: True
    simplification_factor: 300
    max_simplification_error: 40

skeleton:
  allow_skel_gen: True
  feature_context_rfc: # in NM
    axoness: 8000
    spiness: 1000

views:
  use_large_fov_views_ct:
  use_new_renderings_locs:
  # TODO: move all default view parameters here
  nb_views: 2  # used for default view rendering (glia separation, spine detection)

glia:
  prior_glia_removal: True
  # min. connected component size of glia nodes/SV after thresholding glia proba
  min_cc_size_ssv: 8000  # in nm; L1-norm on vertex bounding box

  # Threshold for glia classification
  glia_thresh: 0.161489
  # number of sv used during local rendering. The total number of SV used are
  # subcc_size_big_ssv + 2*(subcc_chunk_size_big_ssv-1)
  subcc_size_big_ssv: 35
  rendering_max_nb_sv: 5000
  # number of SV for which views are rendered in one pass
  subcc_chunk_size_big_ssv: 9

# --------- SPINE PARAMETERS
spines:
  min_spine_cc_size: 10
  min_edge_dist_spine_graph: 110
  gt_path_spineseg: '/wholebrain/scratch/areaxfs3/ssv_spgt/spgt_semseg/'

  # TODO: add view properties for spine prediction
  # mapping parameters of the semantic segmentation prediction to the cell mesh
  # Note: ``k>0`` means that the predictions are propagated to unpredicted and backround labels
  # via nearest neighbors.
  semseg2mesh_spines:
    semseg_key: "spiness"
    force_recompute: True
    k: 0

  # mapping of vertex labels to skeleton nodes; ignore labels 4 (background)
  # and 5 (unpredicted), use labels of the k-nearest vertices
  semseg2coords_spines:
    k: 50
    ds_vertices: 1
    ignore_labels: [4, 5]


compartments:
  dist_axoness_averaging: 10000  # also used for myelin averaging
  gt_path_axonseg: '/wholebrain/scratch/areaxfs3/ssv_semsegaxoness/all_bouton_data/'

  # `k=0` will not map predictions to unpredicted vertices -> faster
  # `k` is the parameter used in `semseg2mesh`
  view_properties_semsegax:
    verbose: False
    ws: [1024, 512]
    nb_views: 3
    comp_window: 40960  # in NM
    semseg_key: 'axoness'
    k: 0
  # mapping of vertex labels to skeleton nodes; ignore labels 5 (background)
  # and 6 (unpredicted), use labels of the k-nearest vertices
  map_properties_semsegax:
    k: 50
    ds_vertices: 1
    ignore_labels: [5, 6]


celltype:
  view_properties_large:
    verbose: False
    ws: [512, 512]
    nb_views_render: 6
    comp_window: 40960
    nb_views_model: 4

merger:
  # `k=0` will not map predictions to unpredicted vertices -> faster
  # `k` is the parameter used in `semseg2mesh`
  view_properties_merger:
    verbose: False
    nb_views: 5
    # ws: [256, 128]
    # comp_window: 15360  # 10240 * 1.5 in NM
    ws: [512, 256]
    comp_window: 20480   
    semseg_key: 'merger_pred'
    k: 0
  # mapping of vertex labels to skeleton nodes; ignore labels 2 (background), 3 (unpredicted)
  # use labels of the k-nearest vertices
  map_properties_merger:
    k: 100
    ds_vertices: 1
    ignore_labels: [2, 3]
    use_ratio: True

# --------- MORPHOLOGY EMBEDDING
tcmn:
  ndim_embedding: 10



